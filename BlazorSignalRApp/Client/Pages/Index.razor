@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@implements IDisposable 

<div class="form-group">
    <label>
        User:
        <input @bind="userInput"/>
    </label>
</div>

<div class="form-group">
    <label>
        Message:
        <input @bind="messageInput" size="50"/>
    </label>
</div>

<button class="btn btn-primary" @onclick="Send" disabled="@(!IsConnected)">Send</button>

<hr />

<ul id="messageList">
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>

@code
{
    private HubConnection hubConnection;
    private List<string> messages = new List<string>();
    private string userInput;
    private string messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
            .Build();


        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodeMessage = $"{user}: {message}";
            messages.Add(encodeMessage);
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    Task Send() => hubConnection.SendAsync("SendMessageToAll", userInput, messageInput);

    //Task Send() => hubConnection.SendAsync("SendMessageToCaller", userInput, messageInput);
    //Task Send() => hubConnection.SendAsync("SendMessageToGroup", userInput, messageInput);
    
    public bool IsConnected => hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }
}